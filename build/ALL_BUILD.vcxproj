<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{662297B8-B8C7-3AAC-81DE-9E828AEBF7CC}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.2.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nope1\source\repos\ElectronsAndProtons\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/nope1/source/repos/ElectronsAndProtons/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nope1/source/repos/ElectronsAndProtons -BC:/Users/nope1/source/repos/ElectronsAndProtons/build --check-stamp-file C:/Users/nope1/source/repos/ElectronsAndProtons/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCUDACompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCXXCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeRCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/nope1/source/repos/ElectronsAndProtons/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nope1/source/repos/ElectronsAndProtons -BC:/Users/nope1/source/repos/ElectronsAndProtons/build --check-stamp-file C:/Users/nope1/source/repos/ElectronsAndProtons/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCUDACompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCXXCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeRCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/nope1/source/repos/ElectronsAndProtons/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nope1/source/repos/ElectronsAndProtons -BC:/Users/nope1/source/repos/ElectronsAndProtons/build --check-stamp-file C:/Users/nope1/source/repos/ElectronsAndProtons/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCUDACompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCXXCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeRCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/nope1/source/repos/ElectronsAndProtons/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nope1/source/repos/ElectronsAndProtons -BC:/Users/nope1/source/repos/ElectronsAndProtons/build --check-stamp-file C:/Users/nope1/source/repos/ElectronsAndProtons/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCUDACompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeCXXCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeRCCompiler.cmake;C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\3.28.0-rc3\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nope1\source\repos\ElectronsAndProtons\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\ZERO_CHECK.vcxproj">
      <Project>{722CC445-089C-32F6-81E5-F6D49C2FD4C4}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\ElectronsAndProtons.vcxproj">
      <Project>{18C45F52-2947-3A24-B641-8F6476D41AB3}</Project>
      <Name>ElectronsAndProtons</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\boing.vcxproj">
      <Project>{4244F14F-BA2E-33A8-AA0F-575B6470A89D}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\clipboard.vcxproj">
      <Project>{898F6130-D52B-3D17-A5B0-8C5DB1D98FA5}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\cursor.vcxproj">
      <Project>{50CD53FA-66AA-3520-9199-6BF887E7EA0E}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\empty.vcxproj">
      <Project>{400DC0BA-EBAB-308B-9F69-99047DA37353}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\events.vcxproj">
      <Project>{C4CAA16A-3419-3AA3-ABA9-C5314D1CE113}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\gamma.vcxproj">
      <Project>{D8290FE4-6D51-380D-B0C3-B3DE3D7D2EC3}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\gears.vcxproj">
      <Project>{0910282F-5C68-310A-85A0-28F88A3248DA}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\src\glfw.vcxproj">
      <Project>{73111FB6-3A84-3D00-B455-33230C9FAEC4}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\glfwinfo.vcxproj">
      <Project>{1602F136-0C51-3AD6-8963-E9C15509EF8B}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\heightmap.vcxproj">
      <Project>{EB25313C-A831-36CD-9C78-E9712E06EBAF}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\icon.vcxproj">
      <Project>{B33EE3A1-8E37-37FA-8C3F-C62D958288E5}</Project>
      <Name>icon</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\iconify.vcxproj">
      <Project>{C7267ACA-EB1E-3284-B09D-A97C91095AA0}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\inputlag.vcxproj">
      <Project>{7AE1F2AC-318D-3B12-8729-EFE6AE905FFD}</Project>
      <Name>inputlag</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\joysticks.vcxproj">
      <Project>{3C408CF8-0405-3334-95F9-A96B7FF945E0}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\monitors.vcxproj">
      <Project>{619D766D-35A2-33D2-8BB3-43B665B9A511}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\msaa.vcxproj">
      <Project>{A19EB644-1478-3B54-BED2-4CC50E05E514}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\offscreen.vcxproj">
      <Project>{BDC62E54-9147-316D-AAAD-C40C9CE13AF4}</Project>
      <Name>offscreen</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\opacity.vcxproj">
      <Project>{78295A26-2C48-347E-B68C-3663C1328F5E}</Project>
      <Name>opacity</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\particles.vcxproj">
      <Project>{AE3009C6-3263-3DC6-B326-ED6DE0A51145}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\reopen.vcxproj">
      <Project>{EA725203-4F14-3C4D-AFEF-674392694E3B}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\sharing.vcxproj">
      <Project>{0702042A-4646-3F00-A3D8-BD6ED3C591E4}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\simple.vcxproj">
      <Project>{09FC3799-F26A-38F2-8E50-3D57F9508823}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\splitview.vcxproj">
      <Project>{7484552B-AD27-3716-825C-6DA8932CC501}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\tearing.vcxproj">
      <Project>{FB596A7F-ABC5-32E6-97DC-BEA3A459F85E}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\threads.vcxproj">
      <Project>{3B0AB129-8A27-31A7-B314-126A9052EABC}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\timeout.vcxproj">
      <Project>{C684830D-C53B-3C36-9FA9-F638F58E8517}</Project>
      <Name>timeout</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\title.vcxproj">
      <Project>{A2C89789-6715-3336-A3D6-EA1D76647838}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\triangle-vulkan.vcxproj">
      <Project>{38FB7E43-170D-3F8D-B489-A1C9DB814D65}</Project>
      <Name>triangle-vulkan</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\examples\wave.vcxproj">
      <Project>{D2A9EE7D-F747-378D-8089-16A1583BE803}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\nope1\source\repos\ElectronsAndProtons\build\external\glfw\tests\windows.vcxproj">
      <Project>{9BE1E482-6DEC-3C49-803C-D7BF6AE807E7}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.2.targets" />
  </ImportGroup>
</Project>